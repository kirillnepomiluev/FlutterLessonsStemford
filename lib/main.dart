import 'package:flutter/material.dart'; // Импорт библиотеки, содержащей основные инструменты flutter - виджеты.

/// Виджет - это физуальные и функциональные компоненты, из которых состоит приложение.
/// Все элементы в flutter являются виджетами.

void main() => runApp(Lesson20());

class Lesson20 extends StatelessWidget { /// StatelessWidget() - это абстрактный класс
/// который отвечает за создание статичного виджета. Статичный виджет - это виджет,
/// который не будет менять своего состояния (например картинка, иконка, текст).

  @override
  Widget build(BuildContext context) {

    return MaterialApp( // Высокоуровневый виджет, отвечающий за создание графического интерфейса приложения в стиле Material Design.

      title: "Название приложения", // В свойство title передается название приложения, которое будет отображаться в названии страницы. Принимает в себя строку.

      home: Scaffold( // Высокоуровневый виджет, создающий шаблон страницы в стиле Material Design.

        appBar: AppBar( // Свойство, отвечающее за наличие верхнего меню - аппбара. Принимает в себя виджет AppBar().

          centerTitle: true, // Свойство, отвечающее за расположение заголовка аппбара по центру. Принимает в себя true или false.

          title: Text("Урок 20", // Свойство, отвечающее за заголовок аппбара. Принимает в себя строку с текстом заголовка.

            style: TextStyle( // Свойство, отвечающее за стиль текста. Принимает в себя виджет TextStyle().

               fontSize: 20, // Свойство, отвечающее за размер шрифта. Принимает в себя вещественное число.

               fontWeight: FontWeight.bold, // Свойство, отвечающее за толщину шрифта. Принимает в себя конструктор FontWeight. который содержит в себе различные варианты толщины.

               fontStyle: FontStyle.italic, // Свойство, отвечающее за стиль текста. Принимает в себя различные конструкторы. Например FontStyle.italic делает текст курсивным.

              /// Существуют различные способы задания цветов. Первый - это воспользоваться готовой библиотекой цветов через конструктор Colors.
              /// Второй - это задать цвет в шестнадцатеричной системе. Для этого испотзуется виджет Color, в скобках пишется 0x, и потом указывается поочередно
              /// прозрачность, концентрация красного, концентрация зеленого, концентрация синего.

               color: Colors.black, // Свойство, отвечающее за цвет текста. Принимает в себя различные конструкторы виджета Color.
               //color: Color(0xFF00FF33), // Иная форма инициалиализации цвета.

            ),
          ),

          backgroundColor: Colors.blueAccent, // Свойство, отвечающее за цвет аппбара. Принимает в себя виджет, содержащий цвет.

        ),

        backgroundColor: Colors.white70, // Свойство, отвечающее за цвет самой страницы.

        floatingActionButton: FloatingActionButton(onPressed: () {},), // Свойство, отвечающее за добавление кнопки. Принимает в себя виджет FloatingActionButton().

        floatingActionButtonLocation: FloatingActionButtonLocation.centerFloat, // Свойство, отвечающее за расположение кнопки на экране. Имеет различные конструкторы.

        bottomNavigationBar: BottomNavigationBar(items: [ // Свойство, отвечающее за добавление нижней навигационной панели.

          BottomNavigationBarItem(icon: Icon(Icons.account_box) , label: "Аккаунт"), // Элементы навигационной панели.

          BottomNavigationBarItem(icon: Icon(Icons.edit), label: "Редактор"),

          BottomNavigationBarItem(icon: Icon(Icons.search), label:"Поиск"),

        ],),
        body: Text( // Свойство, содержащее в себе тело страницы. Принимает в себя различные виджеты. Для примера, в поместим сюда виджет Text().
          "Виджет Text() принимает в себя строку.",
          style: TextStyle(fontSize: 30, fontWeight: FontWeight.bold, fontStyle: FontStyle.italic, color: Colors.black),
        ), // Свойство, содержащее в себе тело страницы. Принимает в себя различные виджеты. Для примера, в поместим сюда виджет Text().
      ),
    );
  }
}
